/**
* Tucuxi TDM server
* This is the Tucuxi TDM server.
*
* OpenAPI spec version: 1.0.0
* Contact: nadir.benallal@heig-vd.ch
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
/*
 * ComputationApi.h
 *
 * 
 */

#ifndef TUCUXI_SERVER_COMPUTATION_API_H_
#define TUCUXI_SERVER_COMPUTATION_API_H_


#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>
#include <pistache/http_headers.h>

#include "../communication/query.h"
#include "../communication/xmlreader.h"

namespace Tucuxi {
namespace Server {
namespace API {

class  ComputationApi {
public:
    ComputationApi(std::shared_ptr<Pistache::Http::Endpoint> _pEndpoint, std::shared_ptr<Pistache::Rest::Router> _pRouter);
    virtual ~ComputationApi() {}

    void setupRoutes();

private:
    void compute_requests_handler(const Pistache::Rest::Request& _request, Pistache::Http::ResponseWriter _response);
    void computation_api_default_handler(const Pistache::Rest::Request& _request, Pistache::Http::ResponseWriter _response);

    /// <summary>
    /// Send requests to process
    /// </summary>
    /// <remarks>
    /// Send a list of requests in XML format following the query.xsd definition.
    /// </remarks>
    /// <param name="body">Query object containing the list of requests</param>
    virtual void compute_requests(const Query& _query, Pistache::Http::ResponseWriter& _response) = 0;

public:
    const std::string m_base = "/";

private:
    std::shared_ptr<Pistache::Http::Endpoint> m_httpEndpoint;
    std::shared_ptr<Pistache::Rest::Router> m_router;

};

} // namespace API
} // namespace Server
} // namespace Tucuxi

#endif /* TUCUXI_SERVER_COMPUTATION_API_H_ */

